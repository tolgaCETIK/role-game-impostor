const namePools = {
  singers: [
    "Aleyna Tilki", "Edis", "Zeynep BastÄ±k", "Merve Ã–zbey", "Simge", "Murda", "Hadise",
    "Reynmen", "Mabel Matiz", "Sefo", "Ben Fero", "Uzi", "Ezhel", "Gazapizm", "Murat Boz",
    "GÃ¼lÅŸen", "Ä°lyas YalÃ§Ä±ntaÅŸ", "Emir Can Ä°ÄŸrek", "Derya UluÄŸ", "Serdar OrtaÃ§", "GÃ¶khan TÃ¼rkmen"
  ],
  actors: [
    "Ã‡aÄŸatay Ulusoy", "Burak Deniz", "Alina Boz", "Hande ErÃ§el",
    "Kerem BÃ¼rsin", "Demet Ã–zdemir", "Ã‡aÄŸlar ErtuÄŸrul", "Engin AkyÃ¼rek", "Serenay SarÄ±kaya",
    "Ä°brahim Ã‡elikkol", "Fahriye Evcen", "Merve BoluÄŸur", "Birce Akalay", "Alperen Duymaz",
    "AyÃ§a AyÅŸin Turan", "Tolga SarÄ±taÅŸ", "Melisa Åženolsun", "AslÄ± Enver", "Ezgi Mola",
    "Hazar ErgÃ¼Ã§lÃ¼", "Burak Ã–zÃ§ivit", "Tolga Ã‡evik", "Cem YÄ±lmaz"
  ],
  influencers: ["Kerimcan Durmaz", "Orkun IÅŸÄ±tmak", "Enes Batur", "CZN Burak", "Danla Bilic", "Merve Ã–zkaynak", "Reynmen", "Ruhi Ã‡enet", "Cemre Solmaz", "Burak Oyunda", "Duygu Ã–zaslan", "Kafalar", "BarÄ±ÅŸ Ã–zcan", "Berkcan GÃ¼ven", "Pqueen", "Nihal Candan", "Yasemin SakallÄ±oÄŸlu", "Nusret", "Ece SeÃ§kin", "Berfu YÄ±ldÄ±z"]

};
namePools.all = [...namePools.singers, ...namePools.actors, ...namePools.influencers];


const lobbyDiv = document.getElementById("lobby");
const gameAreaDiv = document.getElementById("gameArea");
const buttonsDiv = document.getElementById("buttons");
const resultDiv = document.getElementById("result");
const nextBtn = document.getElementById("nextBtn");
const resetBtn = document.getElementById("resetBtn");
const startBtn = document.getElementById("startBtn");
const playerCountRange = document.getElementById("playerCountRange");
const playerCountDisplay = document.getElementById("playerCountDisplay");

let roles = [];
let revealed = [];
let revealedCount = 0;
let currentViewerIndex = null;

function getRandomName() {
  return namePool[Math.floor(Math.random() * namePool.length)];
}



function shuffle(array) {
  for (let i = array.length -1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i+1));
    [array[i], array[j]] = [array[j], array[i]];
  }
  return array;
}

function createButtons(count) {
  buttonsDiv.innerHTML = "";  // Ã–nceki butonlarÄ± temizle
  for(let i = 0; i < count; i++) {
    const btn = document.createElement("button");
    btn.id = "btn" + i;
    btn.textContent = `Oyuncu ${i+1}`;
    btn.onclick = () => revealRole(i);
    buttonsDiv.appendChild(btn);
  }
}

function revealRole(index) {
  if (revealed[index] || currentViewerIndex !== null) return;

  const role = roles[index];
  const emoji = role === "Ä°mpostor" ? "ðŸ”¥" : "ðŸ˜Š";

  document.getElementById("btn" + index).disabled = true;
  revealed[index] = true;
  currentViewerIndex = index;
  nextBtn.disabled = true;

  resultDiv.textContent = "Rol yÃ¼kleniyor...";
  resultDiv.className = "";

  // 1 saniye sonra gerÃ§ek rol gÃ¶sterilsin
  setTimeout(() => {
    resultDiv.innerHTML = `Oyuncu ${index + 1} rolÃ¼: ${emoji} ${role}`;
    resultDiv.className = role === "Ä°mpostor" ? "impostor" : "";
    nextBtn.disabled = false;
  }, 1000);
}




function nextTurn() {
  if (currentViewerIndex === null) return;

  resultDiv.textContent = "";
  resultDiv.className = "";
  currentViewerIndex = null;
  nextBtn.disabled = true;
  revealedCount++;

  if (revealedCount >= roles.length) {
    resultDiv.textContent = "TÃ¼m oyuncular rollerini gÃ¶rdÃ¼.";
    nextBtn.style.display = "none";
    resetBtn.style.display = "inline-block";
  }
}

function getRandomNameByCategory(category) {
  let pool = [];

  switch (category) {
    case "singers":
      pool = namePools.singers;
      break;
    case "actors":
      pool = namePools.actors;
      break;
    case "influencers":
      pool = namePools.influencers;
      break;
    case "all":
    default:
      pool = [
        ...namePools.singers,
        ...namePools.actors,
        ...namePools.influencers
      ];
  }

  return pool[Math.floor(Math.random() * pool.length)];
}




// SayacÄ± slider ile gÃ¶ster
playerCountRange.addEventListener('input', () => {
  playerCountDisplay.textContent = playerCountRange.value;
});

// Event listener'larÄ± baÄŸla
startBtn.addEventListener("click", startGame);
nextBtn.addEventListener("click", nextTurn);
resetBtn.addEventListener("click", () => {
  // Oyunu yeniden baÅŸlat (BaÅŸla butonuna basÄ±lmÄ±ÅŸ gibi)
  startGame();
});


// BaÅŸlangÄ±Ã§ta bazÄ± elementlerin gÃ¶rÃ¼nÃ¼mÃ¼nÃ¼ ayarla
document.addEventListener('DOMContentLoaded', () => {
  gameAreaDiv.style.display = "none";
  nextBtn.style.display = "none";
  resetBtn.style.display = "none";
  playerCountDisplay.textContent = playerCountRange.value;
});

function startGame() {
  const count = parseInt(playerCountRange.value);
  const category = selectedCategory;


  if (count < 3 || count > 10) {
    alert("LÃ¼tfen 3 ile 10 arasÄ±nda bir oyuncu sayÄ±sÄ± seÃ§in.");
    return;
  }

  const namePool = namePools[category];

  lobbyDiv.style.display = "none";
  gameAreaDiv.style.display = "block";

  // 1 impostor, diÄŸer herkes aynÄ± isim
  const commonName = namePool[Math.floor(Math.random() * namePool.length)];
  roles = Array(count - 1).fill(commonName);
  roles.push("Ä°mpostor");
  shuffle(roles);

  revealed = new Array(count).fill(false);
  revealedCount = 0;
  currentViewerIndex = null;

  createButtons(count);

  resultDiv.textContent = "";
  nextBtn.disabled = true;
  nextBtn.style.display = "inline-block";
  resetBtn.style.display = "none";

  lobbyBtn.style.display = "inline-block";  // Lobiye dÃ¶n butonunu gÃ¶ster
}


lobbyBtn.addEventListener("click", () => {
  gameAreaDiv.style.display = "none";
  lobbyDiv.style.display = "block";

  nextBtn.style.display = "none";
  resetBtn.style.display = "none";
  lobbyBtn.style.display = "none";

  // Oyun verilerini temizleyelim (isteÄŸe baÄŸlÄ±)
  roles = [];
  revealed = [];
  revealedCount = 0;
  currentViewerIndex = null;
  buttonsDiv.innerHTML = "";
  resultDiv.textContent = "";
});

const customDropdown = document.getElementById('customDropdown');
const selected = customDropdown.querySelector('.selected');
const options = customDropdown.querySelectorAll('.dropdown-options li');

let selectedCategory = 'all'; // VarsayÄ±lan

selected.addEventListener('click', () => {
  customDropdown.classList.toggle('active');
});

options.forEach(option => {
  option.addEventListener('click', () => {
    selected.textContent = option.textContent;
    selectedCategory = option.dataset.value;
    customDropdown.classList.remove('active');
    console.log("SeÃ§ilen kategori:", selectedCategory);
  });
});
