const namePool = [
  "Aleyna Tilki", "Edis", "Zeynep Bastƒ±k", "Merve √ñzbey", "Simge", "Murda", "Hadise",
  "Reynmen", "Mabel Matiz", "Sefo", "Ben Fero", "Uzi", "Ezhel", "Gazapizm", "Murat Boz",
  "G√ºl≈üen", "ƒ∞lyas Yal√ßƒ±nta≈ü", "Emir Can ƒ∞ƒürek", "Derya Uluƒü", "Serdar Orta√ß", "G√∂khan T√ºrkmen",
  "Oƒüuzhan Ko√ß", "Yalƒ±n", "Sƒ±la", "√áaƒüatay Ulusoy", "Burak Deniz", "Alina Boz", "Hande Er√ßel",
  "Kerem B√ºrsin", "Demet √ñzdemir", "√áaƒülar Ertuƒürul", "Engin Aky√ºrek", "Serenay Sarƒ±kaya",
  "ƒ∞brahim √áelikkol", "Fahriye Evcen", "Merve Boluƒüur", "Birce Akalay", "Alperen Duymaz",
  "Ay√ßa Ay≈üin Turan", "Tolga Sarƒ±ta≈ü", "Melisa ≈ûenolsun", "Aslƒ± Enver", "Ezgi Mola",
  "Hazar Erg√º√ßl√º", "Burak √ñz√ßivit"
];

const lobbyDiv = document.getElementById("lobby");
const gameAreaDiv = document.getElementById("gameArea");
const buttonsDiv = document.getElementById("buttons");
const resultDiv = document.getElementById("result");
const nextBtn = document.getElementById("nextBtn");
const resetBtn = document.getElementById("resetBtn");
const startBtn = document.getElementById("startBtn");
const playerCountRange = document.getElementById("playerCountRange");
const playerCountDisplay = document.getElementById("playerCountDisplay");

let roles = [];
let revealed = [];
let revealedCount = 0;
let currentViewerIndex = null;

function getRandomName() {
  return namePool[Math.floor(Math.random() * namePool.length)];
}

function shuffle(array) {
  for (let i = array.length -1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i+1));
    [array[i], array[j]] = [array[j], array[i]];
  }
  return array;
}

function createButtons(count) {
  buttonsDiv.innerHTML = "";  // √ñnceki butonlarƒ± temizle
  for(let i = 0; i < count; i++) {
    const btn = document.createElement("button");
    btn.id = "btn" + i;
    btn.textContent = `Oyuncu ${i+1}`;
    btn.onclick = () => revealRole(i);
    buttonsDiv.appendChild(btn);
  }
}

function revealRole(index) {
  if (revealed[index] || currentViewerIndex !== null) return;

  const role = roles[index];
  const emoji = role === "ƒ∞mpostor" ? "üî•" : "üòä";

  document.getElementById("btn" + index).disabled = true;
  revealed[index] = true;
  currentViewerIndex = index;
  nextBtn.disabled = true;

  resultDiv.textContent = "Rol y√ºkleniyor...";
  resultDiv.className = "";

  // 1 saniye sonra ger√ßek rol g√∂sterilsin
  setTimeout(() => {
    resultDiv.innerHTML = `Oyuncu ${index + 1} rol√º: ${emoji} ${role}`;
    resultDiv.className = role === "ƒ∞mpostor" ? "impostor" : "";
    nextBtn.disabled = false;
  }, 1000);
}




function nextTurn() {
  if (currentViewerIndex === null) return;

  resultDiv.textContent = "";
  resultDiv.className = "";
  currentViewerIndex = null;
  nextBtn.disabled = true;
  revealedCount++;

  if (revealedCount >= roles.length) {
    resultDiv.textContent = "T√ºm oyuncular rollerini g√∂rd√º.";
    nextBtn.style.display = "none";
    resetBtn.style.display = "inline-block";
  }
}

function startGame() {
  const count = parseInt(playerCountRange.value);
  if(count < 3 || count > 50) {
    alert("L√ºtfen 3 ile 50 arasƒ±nda bir oyuncu sayƒ±sƒ± se√ßin.");
    return;
  }

  lobbyDiv.style.display = "none";
  gameAreaDiv.style.display = "block";

  // Roller: 1 impostor, geri kalanlar aynƒ± isimle dolduruluyor
  const commonName = getRandomName();
  roles = Array(count - 1).fill(commonName);
  roles.push("ƒ∞mpostor");
  shuffle(roles);

  revealed = new Array(count).fill(false);
  revealedCount = 0;
  currentViewerIndex = null;

  createButtons(count);

  resultDiv.textContent = "";
  nextBtn.disabled = true;
  nextBtn.style.display = "inline-block";
  resetBtn.style.display = "none";
}

// Sayacƒ± slider ile g√∂ster
playerCountRange.addEventListener('input', () => {
  playerCountDisplay.textContent = playerCountRange.value;
});

// Event listener'larƒ± baƒüla
startBtn.addEventListener("click", startGame);
nextBtn.addEventListener("click", nextTurn);
resetBtn.addEventListener("click", () => location.reload());

// Ba≈ülangƒ±√ßta bazƒ± elementlerin g√∂r√ºn√ºm√ºn√º ayarla
document.addEventListener('DOMContentLoaded', () => {
  gameAreaDiv.style.display = "none";
  nextBtn.style.display = "none";
  resetBtn.style.display = "none";
  playerCountDisplay.textContent = playerCountRange.value;
});
