 const namePools = {
  singers: [
    "Aleyna Tilki", "Edis", "Zeynep BastÄ±k", "Merve Ã–zbey", "Simge",
    "Murda", "Hadise", "Reynmen", "Mabel Matiz", "Sefo",
    "Ben Fero", "Uzi", "Ezhel", "Gazapizm", "Murat Boz",
    "GÃ¼lÅŸen", "Ä°lyas YalÃ§Ä±ntaÅŸ", "Emir Can Ä°ÄŸrek", "Derya UluÄŸ", "Serdar OrtaÃ§",
    "GÃ¶khan TÃ¼rkmen", "Melike Åžahin", "Melek Mosso", "SÄ±la", "Buray",
    "YalÄ±n", "OÄŸuzhan KoÃ§", "Motive", "Lvbel C5", "Ceza",
    "Taylor Swift", "Billie Eilish", "Ariana Grande", "Dua Lipa", "Doja Cat",
    "Olivia Rodrigo", "Selena Gomez", "Lana Del Rey", "Rihanna", "BeyoncÃ©",
    "Nicki Minaj", "Camila Cabello", "The Weeknd", "Justin Bieber", "Harry Styles",
    "Travis Scott", "Shawn Mendes", "Bruno Mars", "RosÃ©", "Jennie",
    "Lisa", 
  ],

  actors: [
    "Ã‡aÄŸatay Ulusoy", "Burak Deniz", "Alina Boz", "Hande ErÃ§el",
    "Kerem BÃ¼rsin", "Demet Ã–zdemir", "Ã‡aÄŸlar ErtuÄŸrul", "Engin AkyÃ¼rek", "Serenay SarÄ±kaya",
    "Ä°brahim Ã‡elikkol", "Fahriye Evcen", "Merve BoluÄŸur", "Birce Akalay", "Alperen Duymaz",
    "AyÃ§a AyÅŸin Turan", "Tolga SarÄ±taÅŸ", "Melisa Åženolsun", "AslÄ± Enver", "Ezgi Mola",
    "Hazar ErgÃ¼Ã§lÃ¼", "Burak Ã–zÃ§ivit", "Tolga Ã‡evik", "Cem YÄ±lmaz",
    "KÄ±vanÃ§ TatlÄ±tuÄŸ", "Engin Altan DÃ¼zyatan", "BarÄ±ÅŸ ArduÃ§", "Hazal Kaya", "ElÃ§in Sangu",
    "Ã–zge GÃ¼rel", "Serkan Ã‡ayoÄŸlu", "Meryem Uzerli", "Halit ErgenÃ§",
    "Kenan Ä°mirzalÄ±oÄŸlu", "Tuba BÃ¼yÃ¼kÃ¼stÃ¼n", "Burcu Biricik", "GÃ¶kÃ§e BahadÄ±r",
    "TimothÃ©e Chalamet", "Zendaya", "Tom Holland",
    "Chris Hemsworth", "Scarlett Johansson", "Robert Downey Jr.", "Jennifer Lawrence", "Leonardo DiCaprio",
    "Brad Pitt", "Angelina Jolie", "Gal Gadot", "Ryan Reynolds", "Margot Robbie",
    "Dwayne Johnson", "Emma Stone", "Chris Evans", "Natalie Portman", "Will Smith", "Miray Daner", "SÃ¼meyye ErdoÄŸan",
     "Afra SaraÃ§oÄŸlu", "Bensu Soral", "Pelin Akil", "Gizem Karaca",
      "Alp Navruz", "Ä°layda AkdoÄŸan", "Sinem Ãœnsal", "Ahsen EroÄŸlu"

  ],

  influencers: [
    "Kerimcan Durmaz", "Orkun IÅŸÄ±tmak", "Enes Batur", "CZN Burak", "Danla Bilic",
    "Merve Ã–zkaynak", "Ruhi Ã‡enet", "Cemre Solmaz", "Burak Oyunda", "Duygu Ã–zaslan",
    "Kafalar", "BarÄ±ÅŸ Ã–zcan", "Berkcan GÃ¼ven", "Pqueen", "Nihal Candan",
    "Yasemin SakallÄ±oÄŸlu", "Nusret", "Ece SeÃ§kin", "Berfu Yenenler",
    "Mustafa Kemal AtatÃ¼rk", "Recep Tayyip ErdoÄŸan", "Fatih Sultan Mehmet", "Kenan SofuoÄŸlu", "Arda GÃ¼ler",
    "Kenan YÄ±ldÄ±z", "Cristiano Ronaldo", "Lionel Messi", "LeBron James", "Michael Jordan",
    "David Beckham", "Emmanuel Macron", "Donald Trump", "Elon Musk", "Jeff Bezos",
    "Bill Gates", "Mark Zuckerberg", "Ali KoÃ§", "Benim adÄ±m Neargiss", "Ä°dil Yazar", "Refika", "Acun", "Kanka Youtube'dasÄ±n", "Zebani Efe", "Mika Raun", "Limonlu Limonlu" 
  ]
};

namePools.all = [...namePools.singers, ...namePools.actors, ...namePools.influencers];

    // DOM elementleri
    const lobbyDiv = document.getElementById("lobby");
    const gameAreaDiv = document.getElementById("gameArea");
    const buttonsDiv = document.getElementById("buttons");
    const resultDiv = document.getElementById("result");
    const nextBtn = document.getElementById("nextBtn");
    const resetBtn = document.getElementById("resetBtn");
    const startBtn = document.getElementById("startBtn");
    const playerCountRange = document.getElementById("playerCountRange");
    const playerCountDisplay = document.getElementById("playerCountDisplay");
    const lobbyBtn = document.getElementById("lobbyBtn");

    let roles = [];
    let revealed = [];
    let revealedCount = 0;
    let currentViewerIndex = null;
    let selectedCategory = 'all';
    let selectedGameMode = 'impostor';

    function shuffle(array) {
      for (let i = array.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [array[i], array[j]] = [array[j], array[i]];
      }
      return array;
    }

    function createButtons(count) {
      buttonsDiv.innerHTML = "";
      for (let i = 0; i < count; i++) {
        const btn = document.createElement("button");
        btn.id = "btn" + i;
        btn.textContent = `Oyuncu ${i + 1}`;
        btn.onclick = () => revealRole(i);
        buttonsDiv.appendChild(btn);
      }
    }

    function revealRole(index) {
      if (revealed[index] || currentViewerIndex !== null) return;

      const role = roles[index];
      let emoji, className;

      if (selectedGameMode === 'impostor') {
        emoji = role === "Ä°mpostor" ? "ðŸ”¥" : "ðŸ˜Š";
        className = role === "Ä°mpostor" ? "impostor" : "";
      } else {
        if (role.startsWith("FARKLI:")) {
          emoji = "ðŸ˜Š";
          className = "different-name";
        } else {
          emoji = "ðŸ˜Š";
          className = "";
        }
      }

      document.getElementById("btn" + index).disabled = true;
      revealed[index] = true;
      currentViewerIndex = index;
      nextBtn.disabled = true;

      resultDiv.textContent = "Rol yÃ¼kleniyor...";
      resultDiv.className = "";

      setTimeout(() => {
        let displayRole = role;
        if (selectedGameMode === 'different' && role.startsWith("FARKLI:")) {
          displayRole = role.replace("FARKLI:", "");
        }

        resultDiv.innerHTML = `Oyuncu ${index + 1} rolÃ¼: ${emoji} ${displayRole}`;
        resultDiv.className = className;
        nextBtn.disabled = false;
      }, 1000);
    }

    function nextTurn() {
      if (currentViewerIndex === null) return;

      resultDiv.textContent = "";
      resultDiv.className = "";
      currentViewerIndex = null;
      nextBtn.disabled = true;
      revealedCount++;

      if (revealedCount >= roles.length) {
        resultDiv.textContent = "TÃ¼m oyuncular rollerini gÃ¶rdÃ¼.";
        nextBtn.style.display = "none";
        resetBtn.style.display = "inline-block";
      }
    }

    function startGame() {
      const count = parseInt(playerCountRange.value);

      if (count < 3 || count > 10) {
        alert("LÃ¼tfen 3 ile 10 arasÄ±nda bir oyuncu sayÄ±sÄ± seÃ§in.");
        return;
      }

      const namePool = namePools[selectedCategory];

      lobbyDiv.style.display = "none";
      gameAreaDiv.style.display = "block";

      if (selectedGameMode === 'impostor') {
        const commonName = namePool[Math.floor(Math.random() * namePool.length)];
        roles = Array(count - 1).fill(commonName);
        roles.push("Ä°mpostor");
        shuffle(roles);
      } else {
        const commonName = namePool[Math.floor(Math.random() * namePool.length)];
        let differentName;

        do {
          differentName = namePool[Math.floor(Math.random() * namePool.length)];
        } while (differentName === commonName);

        roles = Array(count - 1).fill(commonName);
        roles.push("FARKLI:" + differentName);
        shuffle(roles);
      }

      revealed = new Array(count).fill(false);
      revealedCount = 0;
      currentViewerIndex = null;

      createButtons(count);

      resultDiv.textContent = "";
      nextBtn.disabled = true;
      nextBtn.style.display = "inline-block";
      resetBtn.style.display = "none";
      lobbyBtn.style.display = "inline-block";
    }

    // Event Listeners
    playerCountRange.addEventListener('input', () => {
      playerCountDisplay.textContent = playerCountRange.value;
    });

    startBtn.addEventListener("click", startGame);
    nextBtn.addEventListener("click", nextTurn);
    resetBtn.addEventListener("click", startGame);

    lobbyBtn.addEventListener("click", () => {
      gameAreaDiv.style.display = "none";
      lobbyDiv.style.display = "block";
      nextBtn.style.display = "none";
      resetBtn.style.display = "none";
      lobbyBtn.style.display = "none";
      
      roles = [];
      revealed = [];
      revealedCount = 0;
      currentViewerIndex = null;
      buttonsDiv.innerHTML = "";
      resultDiv.textContent = "";
    });

    // Dropdown iÅŸlevselliÄŸi
    document.addEventListener('DOMContentLoaded', function() {
      const customDropdown = document.getElementById('customDropdown');
      const gameModeDropdown = document.getElementById('gameModeDropdown');
      const blurOverlay = document.getElementById('blurOverlay');

      function closeAllDropdowns() {
        customDropdown.classList.remove('active');
        gameModeDropdown.classList.remove('active');
        blurOverlay.style.display = 'none';
      }

      // Kategori dropdown
      customDropdown.querySelector('.selected').addEventListener('click', function(e) {
        e.stopPropagation();
        const isActive = customDropdown.classList.contains('active');
        
        closeAllDropdowns();
        
        if (!isActive) {
          customDropdown.classList.add('active');
          blurOverlay.style.display = 'block';
        }
      });

      // Mod dropdown
      gameModeDropdown.querySelector('.game-mode-selected').addEventListener('click', function(e) {
        e.stopPropagation();
        const isActive = gameModeDropdown.classList.contains('active');
        
        closeAllDropdowns();
        
        if (!isActive) {
          gameModeDropdown.classList.add('active');
          blurOverlay.style.display = 'block';
        }
      });

      // Kategori seÃ§imi
      customDropdown.querySelectorAll('.dropdown-options li').forEach(option => {
        option.addEventListener('click', function() {
          const selected = customDropdown.querySelector('.selected');
          selected.textContent = this.textContent;
          selectedCategory = this.dataset.value;
          closeAllDropdowns();
        });
      });

      // Mod seÃ§imi
      gameModeDropdown.querySelectorAll('.game-mode-options li').forEach(option => {
        option.addEventListener('click', function() {
          const selected = gameModeDropdown.querySelector('.game-mode-selected');
          const modeValue = this.dataset.value;
          const modeText = modeValue === 'impostor' ? 'Ä°mpostor Modu' : 'FarklÄ± Ä°sim Modu';
          selected.textContent = modeText;
          selectedGameMode = modeValue;
          closeAllDropdowns();
        });
      });

      // DÄ±ÅŸarÄ±ya tÄ±klama ve blur overlay
      document.addEventListener('click', closeAllDropdowns);
      blurOverlay.addEventListener('click', closeAllDropdowns);
    });